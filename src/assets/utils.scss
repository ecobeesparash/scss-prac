$library-colors: (
  text-tertiary: #64b0b2,
  bg-primary: #ffffff,
  bg-secondary: #f6f6f6,
  text-primary: #101010,
  text-secondary: grey,
  transparent: transparent,
);
@each $color, $value in $library-colors {
  .color-#{$color} {
    color: $value;
  }

  .bgcolor-#{ #{$color} } {
    background-color: $value;
  }

  .colorborder-#{ #{$color} } {
    border-width: 1px;
    border-style: solid;
    border-color: $value;
  }
}

$spaceAmounts: (1, 2, 3, 4, 5, 6, 7, 8, auto);
@each $space in $spaceAmounts {
  @if $space == auto {
    .m-#{$space} {
      margin: #{$space};
    }

    .mx-#{$space} {
      margin-left: #{$space};
      margin-right: #{$space};
    }

    .my-#{$space} {
      margin-top: #{$space};
      margin-bottom: #{$space};
    }

    .ml-#{$space} {
      margin-left: #{$space};
    }

    .mr-#{$space} {
      margin-right: #{$space};
    }

    .mb-#{$space} {
      margin-bottom: #{$space};
    }

    .mt-#{$space} {
      margin-top: #{$space};
    }
  } @else {
    .m-#{$space} {
      margin: #{$space}rem;
    }

    .mx-#{$space} {
      margin-left: #{$space}rem;
      margin-right: #{$space}rem;
    }

    .my-#{$space} {
      margin-top: #{$space}rem;
      margin-bottom: #{$space}rem;
    }

    .ml-#{$space} {
      margin-left: #{$space}rem;
    }

    .mr-#{$space} {
      margin-right: #{$space}rem;
    }

    .mb-#{$space} {
      margin-bottom: #{$space}rem;
    }

    .mt-#{$space} {
      margin-top: #{$space}rem;
    }

    .p-#{$space} {
      padding: #{$space}rem;
    }

    .px-#{$space} {
      padding-left: #{$space}rem;
      padding-right: #{$space}rem;
    }

    .py-#{$space} {
      padding-top: #{$space}rem;
      padding-bottom: #{$space}rem;
    }

    .pl-#{$space} {
      padding-left: #{$space}rem;
    }

    .pr-#{$space} {
      padding-right: #{$space}rem;
    }

    .pb-#{$space} {
      padding-bottom: #{$space}rem;
    }

    .pt-#{$space} {
      padding-top: #{$space}rem;
    }
  }
}

$width: (100, 90, 70, 50, 30, 27, 20, 16, 14, 12, 10, 5, 3, "max-content");
@each $wid in $width {
  @if $wid == max-content {
    .w-#{$wid}{
      width: max-content;
    }
  }
  .w-#{$wid} {
    width: #{$wid}#{"%"};
  }
}

$spacing: (10, 20, 30, 40);
@each $space in $spacing {
  .gap-#{$space} {
    gap: #{$space}px;
  }
}

$border: (1, 2, "none");
@each $bor in $border {
  @if $bor == none {
    .b-#{$bor} {
      border: none;
    }
  }

  .b-#{$bor} {
    border: #{$bor}px solid lightgrey;
  }

  .br-#{$bor} {
    border-right: #{$bor}px solid lightgrey;
  }

  .bl-#{$bor} {
    border-left: #{$bor}px solid lightgrey;
  }

  .bb-#{$bor} {
    border-bottom:  #{$bor}px solid lightgrey;
  }
}

$radius: (0, 6, 10, 14, 22, 26, 50);
@each $rad in $radius {
  .border-#{$rad} {
    // border: none;
    border-radius: #{$rad}px;
  }
  .border-tl-#{$rad} {
    border-top-left-radius: #{$rad}px;
  }

  .border-tr-#{$rad} {
    border-top-right-radius: #{$rad}px;
  }

  .border-bl-#{$rad} {
    border-bottom-left-radius: #{$rad}px;
  }

  .border-br-#{$rad} {
    border-bottom-right-radius: #{$rad}px;
  }
}

//display
$displayProps: (
  "block",
  "inline-block",
  "inline",
  "flex",
  "grid",
  "inline-flex",
  "inline-grid",
  "table",
  "inline-table",
  "list-item",
  "none",
  "contents"
);
@each $disp in $displayProps {
  .d-#{$disp} {
    display: #{$disp};
  }
}

$direction: ("column", "row");
@each $direct in $direction {
  .direction-#{$direct} {
    flex-direction: #{$direct};
  }
}

//alignment
$alignments: (
  "center",
  "space-between",
  "space-around",
  "space-evenly",
  "flex-start",
  "flex-end"
);
@each $align in $alignments {
  .justify-#{$align} {
    justify-content: #{$align};
  }

  .items-#{$align} {
    align-items: #{$align};
  }

  .justify-items-#{$align} {
    justify-items: #{$align};
  }

  .content-#{$align} {
    align-content: #{$align};
  }
}

$textAlignments: ("left", "right", "center", "revert");
@each $textAlign in $textAlignments {
  .text-#{$textAlign} {
    text-align: #{$textAlign};
  }
}

// Sizes
$font-sizes: (
  tiny: 12px,
  small: 14px,
  regular: 18px,
  medium: 22px,
  large: 26px,
  xlarge: 30px,
);
@each $size in "tiny" "small" "regular" "medium" "large" "xlarge" {
  .fs-#{$size} {
    font-size: map-get($font-sizes, $size);
  }
}

// Weights
$font-weights: (
  bold: 700,
  medium: 500,
  light: 300,
);
@each $weight in "light" "medium" "bold" {
  .fw-#{$weight} {
    font-weight: map-get($font-weights, $weight);
  }
}
